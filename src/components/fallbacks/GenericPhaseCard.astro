---
const { gachaEvent } = Astro.props;
import CharacterCard from "./GenericCharacterCard.astro";
import WeaponCard from "./GenericWeaponCard.astro";
import { tv } from "tailwind-variants";
import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";
import timezone from "dayjs/plugin/timezone";
dayjs.extend(utc);
dayjs.extend(timezone);

let characters = gachaEvent.featured_characters;

let fiveStars = characters.filter((c: any) => c.rarity == 5);
let fourStars = characters.filter((c: any) => c.rarity == 4);
let weapons = gachaEvent.featured_weapons;

const phaseCard = tv({
  slots: {
    base: "grid-rows-auto grid size-full grid-cols-2 grid-rows-[repeat(3,min-content)] gap-2 font-redacted",
    box: "gap-2",
    character: "",
    weapon: "",
  },
  variants: {
    rarity: {
      5: {
        box: "row-span-1 grid grid-rows-[5fr_1fr] first:min-h-[50cqw]",
      },
      4: {
        box: "col-span-full grid grid-flow-row grid-cols-[repeat(auto-fit,_minmax(15%,_1fr))]",
        character: "aspect-square",
      },
    },
  },
});

const { base, box, character, weapon } = phaseCard({ rarity: 5 });
---

<div class="flex flex-col gap-2 w-full h-full">
  <div
    class="tracking-normal h-min flex w-full justify-between border border-slate-500/10 p-2 text-xs sm:text-sm bg-slate-300 text-slate-400"
  >
    <h1>Phase {gachaEvent.phase.phase}</h1>
    <p>
      {
        dayjs(gachaEvent.startDate + "T" + gachaEvent.phase.start).format(
          "MMM D",
        ) +
          " @" +
          dayjs(gachaEvent.startDate + "T" + gachaEvent.phase.start).format(
            "h a",
          )
      }
    </p>
  </div>
  <div class={base()}>
    {
      fiveStars.map((c: any) => (
        <div class={box({ rarity: 5 })}>
          <CharacterCard character={c} class={character()} />
          <WeaponCard weapon={c.signature} class={weapon({ rarity: 5 })} />
        </div>
      ))
    }
    <div class={box({ rarity: 4 })}>
      {
        fourStars.map((c: any) => (
          <CharacterCard character={c} class={character({ rarity: 4 })} />
        ))
      }
    </div>
    <div class={box({ rarity: 4 })}>
      {
        weapons.map((w: any) => {
          if (w.rarity == 4) {
            return <WeaponCard weapon={w} class={weapon({ rarity: 4 })} />;
          }
        })
      }
    </div>
  </div>
</div>
