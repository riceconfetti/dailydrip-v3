---
import VersionHeader from "./version-header.astro";
import { Block } from "$components/ui/blocks";

import directus from "$services/directus";
import { readItem, type Query } from "@directus/sdk";
import type { Schema, Version } from "$types/collection";

let { vId } = Astro.props;

let version = await directus.request(
  readItem("versions", vId, {
    fields: [
      "id",
      { game: ["*"] },
      "semVer",
      "name",
      {
        events: [
          "*",
          // fetaured_characters
          {
            featured_characters: [
              "id",
              "spec",
              // character_id
              {
                characters_id: [
                  "*",
                  { splash_art: ["*"] },
                  { splash_pad: ["*"] },
                  { events: [{ events_id: ["id", "startDate"] }] },
                  {
                    signature: ["*"],
                  },
                ],
              },
            ],
          },
          // featured_weapons
          {
            featured_weapons: [
              // weapons_id
              {
                weapons_id: ["*"],
              },
            ],
          },
          // layout
          {
            layout: [
              "*",
              {
                blocks: ["*.*.*.*.*"],
              },
            ],
          },
        ],
      },
    ],
  } as Query<Schema, Version>)
);
---

<section
  class="@container size-full grow flex flex-col gap-3 bg-white p-2 sm:p-4 shadow-md max-w-7xl"
>
  <VersionHeader {version} game={version.game} />

  <div
    class="h-full grow flex flex-col gap-3 md:grid md:grid-cols-2 lg:gap-5 w-full"
  >
    {
      version.events!.map((event: any) => {
        const { layout, ...rest } = event;
        let item = structuredClone(layout);
        item.event = rest;
        item.game = version.game;
        return <Block {item} />;
      })
    }
  </div>
</section>
