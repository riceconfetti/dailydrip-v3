---
import { tv } from "tailwind-variants";
import directus from "$services/directus";
import { readItem, type Query } from "@directus/sdk";
import type { Schema, Weapon } from "$types/collection";
import { PUBLIC_DIRECTUS_PATH } from "astro:env/client";
import { twMerge } from "tailwind-merge";

const { weapon, item } = Astro.props;

let placeholder: any = await directus.request(
  readItem("weapons", weapon.game, {
    fields: ["*"],
  } as Query<Schema, Weapon>)
);

const icon = weapon.icon
  ? `${PUBLIC_DIRECTUS_PATH}/assets/${weapon.icon}`
  : `${PUBLIC_DIRECTUS_PATH}/assets/${placeholder.icon}`;

const full = weapon.full
  ? `${PUBLIC_DIRECTUS_PATH}/assets/${weapon.full}?transforms[["extract",${JSON.stringify({ left: 15, top: 15, width: 870, height: 1235 })}]]`
  : `/`;

const weaponCard = tv({
  slots: {
    base: "@container-[size] relative size-full min-h-12 min-w-16 overflow-clip before:absolute before:-inset-1 before:bg-black before:bg-[image:var(--overlay),var(--bgFull)] before:bg-cover before:bg-center before:blur-xs before:content-['']",
    outline: "absolute inset-1 z-10 rounded-xs border-2",
    box: "absolute inset-0 flex size-full items-center justify-center p-2 @7xs:justify-between @squarish:justify-center @squarish:bg-linear-130 @landscape-aspect:flex-row-reverse @landscape-aspect:bg-linear-90 @portrait-aspect:flex-col @portrait-aspect:bg-linear-0",
    image: "aspect-square h-full object-contain p-1",
    name: "p-2 text-center font-heading text-[0.5rem] font-semibold @max-7xs:hidden @3xs:text-sm @xs:text-base @sm:text-lg @squarish:hidden @portrait-3xs:text-sm @portrait-xs:text-base @portrait-sm:text-lg",
  },
  variants: {
    rarity: {
      5: {
        base: "bg-accent-gold-800/30",
        box: "from-accent-gold-600",
        outline: "border-accent-gold-300",
        name: "text-accent-gold-200",
      },
      4: {
        base: "bg-accent-purple-800/30",
        box: "from-accent-purple-600",
        outline: "border-accent-purple-300",
        name: "text-accent-purple-200",
      },
    },
  },
});

const vars = {
  "--bgFull": `url("${full}")`,
  "--bgIcon": `url("${icon}")`,
  "--overlayColor": `oklch(from var(${weapon.rarity == 5 ? "--color-accent-gold-800" : "--color-accent-purple-800"}) l c h / .5)`,
  "--overlay": `linear-gradient(var(--overlayColor),var(--overlayColor))`,
};

const { base, outline, box, image, name } = weaponCard({
  rarity: weapon.rarity,
});

Object.assign(vars, item.style);
---

<div class={twMerge(base().split(" "), item.classlist)} style={vars}>
  <div class={outline()}></div>
  <div class={box()}>
    <img src={icon} class={image()} />
    <h2 class={name()}>
      {weapon.name}
    </h2>
  </div>
</div>
