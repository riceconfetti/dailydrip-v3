---
import directus from "$services/directus";
import { readItem, type Query } from "@directus/sdk";
import LayoutComp from "$layouts/Layout.astro";
import { PUBLIC_DEPLOY_MODE } from "astro:env/client";
import { Block } from "$components/ui/blocks";
import type { Schema, Layout } from "$types/collection";
import { date } from "astro:schema";
let layout: any = {};

export const prerender = false;
const isPreview = PUBLIC_DEPLOY_MODE == "server";
const { layoutid } = Astro.params;

if (layoutid != undefined && isPreview) {
  layout = await directus.request(
    readItem("layouts", layoutid!, {
      fields: ["*", { grid: ["*"] }],
    } as Query<Schema, Layout>)
  );
} else {
  return Astro.rewrite("/404");
}

let item = structuredClone(layout);
item.game = await directus.request(
  readItem("games", layout.game, { fields: ["*"] })
);
item.event = {
  start_date: Date.toString(),
  featured_characters: [],
  featured_weapons: [],
};

const style = layout.grid.vars
  .map((x: any) => ({
    [`--${x.size}_rows`]: x.rows,
    [`--${x.size}_cols`]: x.cols,
  }))
  .reduce((p: any, c: any) => Object.assign(p, c), {});

const title = "The Daily Drip | " + layout.game.name + " | " + layout.name;
---

<LayoutComp {title}>
  <section
    class="@container w-full flex flex-col gap-2 bg-white p-2 sm:p-4 shadow-md max-w-7xl"
    style={style}
  >
    <div
      class="grid grid-rows-(--sm_rows) grid-cols-(--sm_cols) md:grid-rows-(--md_rows) md:grid-cols-(--md_cols) gap-3"
    >
      <Block {item} />
    </div>
  </section>
</LayoutComp>
